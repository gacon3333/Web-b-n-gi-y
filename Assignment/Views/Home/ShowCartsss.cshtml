@model IEnumerable<ClassLibrary1.Models.GioHangChiTiet>
@using ClassLibrary1.Models;
@using Newtonsoft.Json;
@{
    CuaHangGiayDBContext shopDbContext = new CuaHangGiayDBContext();
}

<br />
<br />
<br />
<br />
<br />
<br />
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.2.slim.js"
        integrity="sha256-OflJKW8Z8amEUuCaflBZJ4GOg4+JnNh9JdVfoV+6biw=" crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>


<div class="container bootdey">
    <div class="col-lg-12 col-sm-12">
        <span class="title">SHOPPING CART</span>
    </div>
    <div class="col-lg-12 col-sm-12 hero-feature">
        <div class="table-responsive">
            <table class="table table-bordered tbl-cart">
                <thead style="background-color:coral">
                    <tr>
                        <td class="hidden-xs">Image</td>
                        <td>Product Name</td>
                        <td>Size</td>
                        <td>Color</td>
                        <td class="td-qty">Quantity</td>
                        <td>Unit Price</td>
                        <td>Sub Total</td>
                        <td>Remove</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var size = shopDbContext.KichCos.FirstOrDefault(i => i.Id == item.IdChiTietSpNavigation.IdKichCo).Size;
                        var mausac = shopDbContext.MauSacs.FirstOrDefault(i => i.Id == item.IdChiTietSpNavigation.IdMauSac).Ten;
                        @* var kieusp = shopDbContext.KieuSps.FirstOrDefault(i => i.Id == item.IdChiTietSpNavigation.IdKieuSp).Ten;*@
                        var tota = @item.DonGia * @item.SoLuong;
                        <tr data-row-id="{{@item.Id}}">
                            <td class="hidden-xs">
                                <a href="#">
                                    <img src="@Html.DisplayFor(modelItem => item.IdChiTietSpNavigation.LinkAnh)" alt="Age Of Wisdom Tan Graphic Tee" title="" width="47" height="47">
                                </a>
                            </td>
                            <td>
                                <a href="#">@Html.DisplayFor(modelItem => item.IdChiTietSpNavigation.Ten)</a>
                            </td>
                            <td>
                                @size
                                @*<select name="">
                            <option value="" selected="selected">S</option>
                            <option value="">M</option>
                            </select>*@
                            </td>
                            <td>@mausac</td>
                            <td style=" display: flex;">
                                <button class="btn btn-link px-2"
                                    onclick="this.parentNode.querySelector('input[type=number]').stepDown()">
                                    <i class="fas fa-minus"></i>
                                </button>
                                <input type="number" class="form-control text-end" data-item-id="@item.IdChiTietSp" name="qty" min="1" max="@Html.DisplayFor(modelItem => item.IdChiTietSpNavigation.SoLuongTon)" value="@Html.DisplayFor(modelItem => item.SoLuong)" oninput="Calc(this)">
                                <button class="btn btn-link px-2"
                                    onclick="this.parentNode.querySelector('input[type=number]').stepUp()">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </td>
                            <td><input type="number" class="form-control text-end" name="rate" value="@item.DonGia" disabled=""></td>

                            <td><input type="number" class="form-control text-end" name="amt" value="@tota" disabled=""></td>
                            <td class="text-center">
                                <a href="@Url.Action("DeleteCart", new { id = item.Id })" class="remove_cart" rel="2">
                                    <i class="fa fa-trash-o"></i>
                                </a>
                            </td>
                        </tr>
                    }

                    <tr>
                        <td colspan="6" align="right">Total</td>

                        <td class="total" colspan="2">

                            <div class="input-group mb-3">
                                <input type="number" class="form-control text-end" id="FTotal" name="FTotal" disabled="">
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="d-flex justify-content-between">
            <div class="d-flex justify-content-start">
                <button type="button" class="btn btn-light btn-lg me-2" style="background-color:coral">
                    <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Privacy">
                        Continue shopping
                    </a>
                </button>

            </div>
            
            <div class="d-flex justify-content-end">
                @if (Model.Count() <= 0)
                {
                    <button type="button" class="btn btn-primary btn-lg" style="background-color:coral" disabled>
                        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="ShowDatHang">
                            Mua Hàng
                        </a>
                    </button>
                }
                else
                {
                    <button type="button" class="btn btn-primary btn-lg" style="background-color:coral">
                        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="ShowDatHang">
                            Mua Hàng
                        </a>
                    </button>
                }

            </div>
        </div>
    </div>
</div>

<script>
    //const myInput = document.getElementsByName("qty");

    //myInput.addEventListener("input", function () {
    //    console.log("Input value changed:", qty.value);
    //    // Code to reload input value goes here
    //});

    //var input = document.querySelector("input[name='qty']");
    //input.addEventListener("input", function () {
    //    var max = parseFloat(this.max);
    //    var min = parseFloat(this.min);
    //    var val = parseFloat(this.value);
    //    if (val > max) {
    //        this.value = max;
    //    }
    //    if (val < min) {
    //        this.value = min;
    //    }
    //});



    function Calc(v) {
        var index = $(v).closest('tr').index();
        var qty = document.getElementsByName("qty")[index].value;
        var rate = document.getElementsByName("rate")[index].value;
        var amt = qty * rate;
        document.getElementsByName("amt")[index].value = amt;
        GetTotal();
    }

    const inputs = document.querySelectorAll('input[name="qty"]');
    inputs.forEach((input) => {
        const minusBtn = input.previousElementSibling;
        const plusBtn = input.nextElementSibling;

        minusBtn.addEventListener("click", () => {
            if (input.value > 1) {  // Kiểm tra giá trị input
                input.value;
                input.dispatchEvent(new Event("input"));
                minusBtn.disabled = false;
            }
            else {  // Nếu giá trị input nhỏ hơn hoặc bằng 1, thì disable nút minus button
                input.value;
                input.dispatchEvent(new Event("input"));
                minusBtn.disabled = true;
            }
            plusBtn.disabled = false; // Enable nút plus button
           
        });

        plusBtn.addEventListener("click", () => {
            if (input.value <= 10000) {
                input.value;

                input.dispatchEvent(new Event("input"));
                plusBtn.disabled = false;
            }
            else {
                input.value;
                input.dispatchEvent(new Event("input"));
                plusBtn.disabled = true;
            }
            minusBtn.disabled = false;
          

        });

        input.addEventListener("input", () => {
            Calc(input);
        });
    });
    function GetTotal() {

        var sum = 0;
        var amts = document.getElementsByName("amt");

        for (let index = 0; index < amts.length; index++) {
            var amt = amts[index].value;
            sum = +(sum) + +(amt);
        }
        document.getElementById("FTotal").value = sum;
    }
    document.addEventListener("DOMContentLoaded", function () {
        GetTotal(); // Thay đổi giá trị tổng tự động
    });

    //////////////////////////////////////////
    $('input[name="qty"]').on('change', function () {
        var qty = $(this).val();
        var itemId = $(this).data('item-id');

        $.ajax({
            url: '@Url.Action("UpdateCart")',
            type: 'POST',
            data: { id: itemId, qty: qty },
            success: function (result) {
                // Cập nhật số lượng trong giỏ hàng
                // Hiển thị thông báo thành công hoặc lỗi
            },
            error: function () {
                // Hiển thị thông báo lỗi
            }
        });
    });

    $('button.btn-link').on('click', function () {
        var inputQty = $(this).siblings('input[name="qty"]');
        var qty = inputQty.val();
        var itemId = inputQty.data('item-id');

        if ($(this).hasClass('fa-minus')) {
            if (qty > 1) {
                qty--;
            }
        } else if ($(this).hasClass('fa - plus')) {
            
            var maxQty = parseInt(inputQty.attr('max'));
            if (qty < maxQty) {
                qty++;
            }
        }


        inputQty.val(qty);

        $.ajax({
            url: '@Url.Action("UpdateCart")',
            type: 'POST',
            data: { id: itemId, qty: qty },
            success: function (result) {
                // Cập nhật số lượng trong giỏ hàng
                // Hiển thị thông báo thành công hoặc lỗi
            },
            error: function () {
                // Hiển thị thông báo lỗi
            }
        });
    });
    //document.addEventListener("DOMContentLoaded", function () {

    //});
   
</script>